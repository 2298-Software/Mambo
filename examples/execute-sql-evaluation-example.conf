application {
  name = Vehicle Data
  description = "A pipeline to load and timestamp vehicle data from SqlServer."
  executors = 1
  executor.cores = 1
  executor.memory = 1g
  master = "local[2]"
}
steps {
  step-001 {
    name = "Load Vehicle Data"
    description = "Example that loads vehicle data from an external H2 Database."
    enabled = true
    type = GetRdbms
    jdbcUrl = "jdbc:h2:mem:test"
    driver = "org.h2.Driver"
    user = sa
    pass = sa
    query = "select * from auto.vehicles"
    splitCount = 1
    splitColumn = id
    outputType = memory
    outputName = vehicles
    show = true
    repartition = 1
  }
  step-002 {
    name = "Check Data Quality"
    description = "Example that verifies vehicle data size is within expected range."
    enabled = true
    type = ExecuteSqlEvaluation
    query = "select if(count(*) == 2, 'pass', 'fail') as result from vehicles"
    failOn = fail
  }
  step-003 {
    name = "Save Vehicle Data"
    description = "Example that saves vehicle data to an external H2 Database."
    enabled = true
    type = PutRdbms
    jdbcUrl = "jdbc:h2:mem:test"
    driver = "org.h2.Driver"
    user = sa
    pass = sa
    query = "select * from vehicles"
    outputName = "new_vehicle_info"
    splitCount = 1
    splitColumn = id
    show = true
    repartition = 1
  }
}