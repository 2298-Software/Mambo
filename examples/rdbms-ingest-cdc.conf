application {
  name = Vehicle Data
  description = "A pipeline to load and timestamp vehicle data from SqlServer."
  master = "local[2]"
}
steps {
  step-001 {
    name = "Load Vehicle Data"
    description = "Example that loads vehicle data from external H2 database."
    enabled = true
    type = GetRdbms
    jdbcUrl = "jdbc:h2:mem:test"
    driver = "org.h2.Driver"
    user = sa
    pass = sa
    query = "select * from auto.vehicles"
    splitColumn = "id"
    splitCount = 1
    outputName = vehicles
  }
  step-002 {
    name = "Load Vehicle Data"
    description = "Example that loads vehicle data from external H2 database."
    enabled = true
    type = GetRdbms
    jdbcUrl = "jdbc:h2:mem:test"
    driver = "org.h2.Driver"
    user = sa
    pass = sa
    query = "select * from auto.vehicles_delta"
    splitColumn = "id"
    splitCount = 1
    outputName = vehicles_delta
  }
  step-003 {
    name = "CDC Vehicle Data"
    description = "Example that execute cdc on vehicle data."
    enabled = true
    type = ExecuteCdc
    query1 = "select * from vehicles"
    query2 = "select * from vehicles_delta"
    keyColumn = id
    show = true
    outputName = vehicles_cdc
  }
  step-004 {
    name = "Save New Vehicle Data"
    description = "Example that saves vehicle data to json."
    enabled = true
    type = PutFile
    query = "select * from vehicles_cdc_adds"
    path = ${environment.out-dir}/vehicles-from-rdbms-cdc-adds.json
    format = json
    repartition = 1
    saveMode = overwrite
  }
  step-005 {
    name = "Save Updated Vehicle Data"
    description = "Example that saves vehicle data to json."
    enabled = true
    type = PutFile
    query = "select * from vehicles_cdc_updates"
    path = ${environment.out-dir}/vehicles-from-rdbms-cdc-updates.json
    format = json
    repartition = 1
    saveMode = overwrite
  }
}
